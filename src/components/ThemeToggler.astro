
<button aria-lable="Theme toggler">

    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-moon" viewBox="0 0 16 16">
        <path class="moon" d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286"/>
        <path class="sun" d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708"/>
    </svg>
</button>

<style>
    button{
        cursor: pointer;
        border-radius: 10px;
        border: 0;
        padding: 5px  10px;
        transition: all 0.2s ease-in-out;
    }
    button:hover{
        transform: scale(0.9);
    }
    button:active{
        transform: scale(1);
    }
    .sun{
        fill: transparent;
    }
    :global(.dark) .sun{
        fill: black;
    }
    :global(.dark) .moon{
        fill: transparent;
    
</style>

<script>
    // import { titleCase } from "title-case";
    const DARK_THEME_CLASS = "dark";
    const COLOUR_MODE = "COLOR_MODE"; // local memory key
    const LIGHT_THEME = "LIGHT";
    const DARK_THEME = "DARK";

    const toggle = document.querySelector("button");
    const rootEl = document.documentElement;

    // Function to get initial color mode
    const getInitialColourMode = () => {
        const previouslySavedColourMode = window.localStorage.getItem(COLOUR_MODE);
        if (previouslySavedColourMode) {
            return previouslySavedColourMode;
        }

        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return DARK_THEME;
        }
        return LIGHT_THEME;
    };

    // Set initial color mode based on the saved preference or system preference
    const initialColourMode = getInitialColourMode();

    //const title = titleCase(`The theme of our users is ${initialColourMode}`);
    //alert(title);
    const setInitialColourMode = (mode:string) => {
        if (mode === LIGHT_THEME) {
            rootEl.classList.remove(DARK_THEME_CLASS);
        } else {
            rootEl.classList.add(DARK_THEME_CLASS);
        }
    };

    // Set the initial color mode on page load
    setInitialColourMode(initialColourMode);

    // Add event listener to the toggle button
    if (toggle) {
        toggle.addEventListener('click', () => {
            rootEl.classList.toggle(DARK_THEME_CLASS); // Change theme

            // Save the current color mode to local storage
            const colorMode = rootEl.classList.contains(DARK_THEME_CLASS)
                ? DARK_THEME
                : LIGHT_THEME;

            window.localStorage.setItem(COLOUR_MODE, colorMode);
        });
    }
</script>

