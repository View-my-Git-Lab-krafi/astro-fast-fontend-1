<button id="dark-light-toggle" aria-label="Theme toggler">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-moon" viewBox="0 0 16 16">
        <path class="moon" d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278M4.858 1.311A7.27 7.27 0 0 0 1.025 7.71c0 4.02 3.279 7.276 7.319 7.276a7.32 7.32 0 0 0 5.205-2.162q-.506.063-1.029.063c-4.61 0-8.343-3.714-8.343-8.29 0-1.167.242-2.278.681-3.286"/>
        <path class="sun" d="M8 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6m0 1a4 4 0 1 0 0-8 4 4 0 0 0 0 8M8 0a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 0m0 13a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-1 0v-2A.5.5 0 0 1 8 13m8-5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2a.5.5 0 0 1 .5.5M3 8a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1 0-1h2A.5.5 0 0 1 3 8m10.657-5.657a.5.5 0 0 1 0 .707l-1.414 1.415a.5.5 0 1 1-.707-.708l1.414-1.414a.5.5 0 0 1 .707 0m-9.193 9.193a.5.5 0 0 1 0 .707L3.05 13.657a.5.5 0 0 1-.707-.707l1.414-1.414a.5.5 0 0 1 .707 0m9.193 2.121a.5.5 0 0 1-.707 0l-1.414-1.414a.5.5 0 0 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .707M4.464 4.465a.5.5 0 0 1-.707 0L2.343 3.05a.5.5 0 1 1 .707-.707l1.414 1.414a.5.5 0 0 1 0 .708"/>
    </svg>
</button>

<button id="dracula-peachoff-toggle" aria-label="Theme toggler">
    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-palette" viewBox="0 0 16 16">
        <path class="dracula" d="M8 0L6 2h4L8 0zm1 16L6 14h4l-2 2zm7-8l-2 2V6l2 2zM1 8L-1 6v4l2-2zM12.12 4.93l-1.42 1.42L14.83 10l1.42-1.41-4.24-4.25zM1.41 10.41L3 12l1.42-1.42L3 8.16l-1.59 1.6zM12.12 11.66l-4.24 4.25L9.3 17.83l4.24-4.24L12.12 11.66zM5.41 1.41L4 0 2.59 1.41l1.41 1.42L5.41 1.41z"/>
        <path class="peachoff" d="M7 1L4 4h6L7 1zm2 14L4 11h6l-3 4zM16 7l-3 3V4l3 3zM0 7L-3 4v6l3-3zM11.66 3.34l-1.42 1.42L13.59 9l1.42-1.42L11.66 3.34zM1.41 9.41L3 11l1.42-1.42L3 8.16 1.41 9.41zM11.66 12.88l-4.25 4.24L8.66 17.83l4.25-4.24L11.66 12.88zM5.41 0L4 0 2.59 1.41l1.41 1.42L5.41 1.41z"/>
    </svg>
</button>

<style>
    button {
        cursor: pointer;
        border-radius: 10px;
        border: 0;
        padding: 5px 10px;
        transition: all 0.2s ease-in-out;
        margin: 0 5px; /* Add some spacing between buttons */
    }
    button:hover {
        transform: scale(0.9);
    }
    button:active {
        transform: scale(1);
    }
    .sun, .moon, .dracula, .peachoff {
        fill: transparent;
    }
    :global(.dark) .sun {
        fill: black;
    }
    :global(.dark) .moon {
        fill: transparent;
    }
    :global(.dracula) .dracula {
        fill: #f8f8f2;
    }
    :global(.peachoff) .peachoff {
        fill: #ff6f61;
    }
</style>



<script>
    const DARK_THEME_CLASS = "dark";
    const LIGHT_THEME_CLASS = "light";
    const DRACULA_THEME_CLASS = "dracula";
    const PEACHOFF_THEME_CLASS = "peachoff";
    const COLOUR_MODE = "COLOR_MODE"; // local storage key

    const darkLightToggle = document.getElementById("dark-light-toggle");
    const draculaPeachoffToggle = document.getElementById("dracula-peachoff-toggle");
    const rootEl = document.documentElement;

    // Get initial color mode
    const getInitialColourMode = () => {
        const previouslySavedColourMode = window.localStorage.getItem(COLOUR_MODE);
        if (previouslySavedColourMode) {
            return previouslySavedColourMode;
        }

        if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
            return DARK_THEME_CLASS;
        }
        return LIGHT_THEME_CLASS;
    };

    const initialColourMode = getInitialColourMode();

    // Set initial color mode
    const setInitialColourMode = (mode) => {
        rootEl.className = mode;
    };

    setInitialColourMode(initialColourMode);

    // Add event listener to the dark-light toggle button
    darkLightToggle.addEventListener('click', () => {
        if (rootEl.classList.contains(DARK_THEME_CLASS)) {
            rootEl.classList.remove(DARK_THEME_CLASS);
            rootEl.classList.add(LIGHT_THEME_CLASS);
            window.localStorage.setItem(COLOUR_MODE, LIGHT_THEME_CLASS);
        } else if (rootEl.classList.contains(LIGHT_THEME_CLASS)) {
            rootEl.classList.remove(LIGHT_THEME_CLASS);
            rootEl.classList.add(DARK_THEME_CLASS);
            window.localStorage.setItem(COLOUR_MODE, DARK_THEME_CLASS);
        }
    });

    // Add event listener to the dracula-peachoff toggle button
    draculaPeachoffToggle.addEventListener('click', () => {
        if (rootEl.classList.contains(DRACULA_THEME_CLASS)) {
            rootEl.classList.remove(DRACULA_THEME_CLASS);
            rootEl.classList.add(PEACHOFF_THEME_CLASS);
            window.localStorage.setItem(COLOUR_MODE, PEACHOFF_THEME_CLASS);
        } else if (rootEl.classList.contains(PEACHOFF_THEME_CLASS)) {
            rootEl.classList.remove(PEACHOFF_THEME_CLASS);
            rootEl.classList.add(DRACULA_THEME_CLASS);
            window.localStorage.setItem(COLOUR_MODE, DRACULA_THEME_CLASS);
        } else {
            // Default to Dracula theme if none of the theme classes are present
            rootEl.classList.add(DRACULA_THEME_CLASS);
            window.localStorage.setItem(COLOUR_MODE, DRACULA_THEME_CLASS);
        }
    });
</script>



