---
import BaseLayout from '../../layouts/BaseLayout.astro';

const pageTitle = 'Tag Index';
const initialPageSize = 20;
const allPosts = await Astro.glob('../posts/*.md');
const tags = [
  ...new Set(allPosts.flatMap((post) => {
    const tags = post.frontmatter.tags;
    if (typeof tags === 'string') {
      return tags.split(',').map(tag => tag.trim());
    } else if (Array.isArray(tags)) {
      return tags.map(tag => tag.trim());
    } else {
      return [];
    }
  })),
];
const initialTags = tags.slice(0, initialPageSize);
---

<BaseLayout pageTitle={pageTitle}>
  <div class="tag-list">
    <h3>Tags</h3>
    <ul>
      {
        initialTags.map((tag) => (
          <li>
            <a class="tag" href={`/tags/${tag}`}>{tag}</a>
          </li>
        ))
      }
    </ul>
  </div>
</BaseLayout>

<script context="defer">
  let page = 1;
  const pageSize = ${initialPageSize};
  const totalTags = ${tags.length};
  const tagsContainer = document.querySelector('.tag-list ul');

  const fetchTags = async (page) => {
    const response = await fetch(`/api/tags?page=${page}&pageSize=${pageSize}`);
    return await response.json();
  };

  const loadMoreTags = async () => {
    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {
      page += 1;
      if ((page - 1) * pageSize < totalTags) {
        const newTags = await fetchTags(page);
        newTags.forEach(tag => {
          const liElement = document.createElement('li');
          const tagElement = document.createElement('a');
          tagElement.className = 'tag';
          tagElement.href = `/tags/${tag}`;
          tagElement.textContent = tag;
          liElement.appendChild(tagElement);
          tagsContainer.appendChild(liElement);
        });
      }
    }
  };

  window.addEventListener('scroll', loadMoreTags);
</script>

<style>

</style>
