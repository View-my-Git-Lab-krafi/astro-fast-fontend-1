---
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';

const allPosts = await Astro.glob('../../pages/posts/*.md');
const sortedPosts = allPosts.sort((a, b) => new Date(b.frontmatter.date) - new Date(a.frontmatter.date));
const pageSize = 5;
const totalPages = Math.ceil(sortedPosts.length / pageSize);
const currentPage = 1;
const currentPosts = sortedPosts.slice(0, pageSize);
const pageTitle = 'My Astro Learning Blog';
---

<BaseLayout pageTitle={pageTitle}>
  <div class="grid-container">
    {currentPosts.map((post) => (
      <BlogPost url={post.url} title={post.frontmatter.title} image={post.frontmatter.image} description={post.frontmatter.description} />
    ))}
  </div>

  <nav aria-label="Pagination">
    <ul class="pagination">
      <li class={currentPage === 1 ? 'disabled' : ''}>
        <a href={currentPage > 1 ? `/blog/${currentPage - 1}` : '#'}>«</a>
      </li>
      <li>
        <a href="/blog/1" class={currentPage === 1 ? 'active' : ''}>1</a>
      </li>
      {currentPage > 3 && <li><span>…</span></li>}
      {Array.from({ length: totalPages }, (_, i) => i + 1)
        .filter(page => page > 1 && page < totalPages)
        .slice(currentPage > 3 ? currentPage - 2 : 0, currentPage + 1)
        .map(page => (
          <li key={page}>
            <a href={`/blog/${page}`} class={currentPage === page ? 'active' : ''}>{page}</a>
          </li>
        ))}
      {currentPage < totalPages - 2 && <li><span>…</span></li>}
      <li>
        <a href={`/blog/${totalPages}`} class={currentPage === totalPages ? 'active' : ''}>{totalPages}</a>
      </li>
      <li class={currentPage === totalPages ? 'disabled' : ''}>
        <a href={currentPage < totalPages ? `/blog/${currentPage + 1}` : '#'}>»</a>
      </li>
    </ul>
  </nav>
</BaseLayout>

<style>
  body {
    font-family: 'Lato', sans-serif;
    background-color: #2C2F33;
    margin: 0;
    padding: 0;
    color: #FFF;
  }

  .grid-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 20px;
    width: 90%;
    max-width: 1200px;
    margin: 20px auto;
  }

  .pagination {
    display: flex;
    justify-content: center;
    margin: 20px 0;
  }

  .pagination li {
    list-style: none;
    margin: 0 5px;
  }

  .pagination a {
    color: #FFF;
    background-color: #7289DA;
    padding: 10px 15px;
    border-radius: 5px;
    text-decoration: none;
  }

  .pagination .active {
    background-color: #5B6EAE;
  }

  .pagination .disabled a {
    pointer-events: none;
    opacity: 0.5;
  }

  @media (max-width: 900px) {
    .grid-container {
      grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    }
  }

  @media (max-width: 600px) {
    .grid-container {
      grid-template-columns: 1fr;
    }
  }
</style>
